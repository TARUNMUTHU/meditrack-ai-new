{"ast":null,"code":"// C:\\Users\\ASUS\\meditrack-ai\\frontend\\src\\firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged // Listens to authentication state changes\n} from \"firebase/auth\";\nimport { getFirestore, doc, setDoc, getDoc, updateDoc, collection, addDoc } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration - Get these from your Firebase project settings\n// IMPORTANT: Replace these with your actual keys from frontend/.env.local\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get service instances\nconst auth = getAuth(app); // Firebase Authentication service\nconst db = getFirestore(app); // Firestore Database service\n\n// Export the initialized services and commonly used functions\nexport { app,\n// The initialized Firebase app instance\nauth,\n// Firebase Authentication service\ndb,\n// Firestore Database service\n\n// Firebase Auth functions\ncreateUserWithEmailAndPassword,\n// For creating new users\nsignInWithEmailAndPassword,\n// For signing in existing users\nsignOut,\n// For logging out users\nonAuthStateChanged,\n// For listening to authentication state changes\n\n// Firestore functions\ndoc,\n// For creating a DocumentReference\nsetDoc,\n// For setting document data (e.g., creating user profile)\ngetDoc,\n// For getting document data\nupdateDoc,\n// For updating document data\ncollection,\n// For creating a CollectionReference\naddDoc // For adding a new document with an auto-generated ID\n};","map":{"version":3,"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","updateDoc","collection","addDoc","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db"],"sources":["C:/Users/ASUS/meditrack-ai/frontend/src/firebase.js"],"sourcesContent":["// C:\\Users\\ASUS\\meditrack-ai\\frontend\\src\\firebase.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { \r\n  getAuth, \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged // Listens to authentication state changes\r\n} from \"firebase/auth\";\r\nimport { \r\n  getFirestore, \r\n  doc, \r\n  setDoc, \r\n  getDoc, \r\n  updateDoc, \r\n  collection, \r\n  addDoc \r\n} from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration - Get these from your Firebase project settings\r\n// IMPORTANT: Replace these with your actual keys from frontend/.env.local\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Get service instances\r\nconst auth = getAuth(app); // Firebase Authentication service\r\nconst db = getFirestore(app); // Firestore Database service\r\n\r\n// Export the initialized services and commonly used functions\r\nexport {\r\n  app,        // The initialized Firebase app instance\r\n  auth,       // Firebase Authentication service\r\n  db,         // Firestore Database service\r\n\r\n  // Firebase Auth functions\r\n  createUserWithEmailAndPassword, // For creating new users\r\n  signInWithEmailAndPassword,     // For signing in existing users\r\n  signOut,                        // For logging out users\r\n  onAuthStateChanged,             // For listening to authentication state changes\r\n\r\n  // Firestore functions\r\n  doc,                            // For creating a DocumentReference\r\n  setDoc,                         // For setting document data (e.g., creating user profile)\r\n  getDoc,                         // For getting document data\r\n  updateDoc,                      // For updating document data\r\n  collection,                     // For creating a CollectionReference\r\n  addDoc                          // For adding a new document with an auto-generated ID\r\n};"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,CAAC;AAAA,OACd,eAAe;AACtB,SACEC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,MAAM,QACD,oBAAoB;;AAE3B;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW;AACrB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAG5B,aAAa,CAACa,cAAc,CAAC;;AAEzC;AACA,MAAMgB,IAAI,GAAG5B,OAAO,CAAC2B,GAAG,CAAC,CAAC,CAAC;AAC3B,MAAME,EAAE,GAAGxB,YAAY,CAACsB,GAAG,CAAC,CAAC,CAAC;;AAE9B;AACA,SACEA,GAAG;AAAS;AACZC,IAAI;AAAQ;AACZC,EAAE;AAAU;;AAEZ;AACA5B,8BAA8B;AAAE;AAChCC,0BAA0B;AAAM;AAChCC,OAAO;AAAyB;AAChCC,kBAAkB;AAAc;;AAEhC;AACAE,GAAG;AAA6B;AAChCC,MAAM;AAA0B;AAChCC,MAAM;AAA0B;AAChCC,SAAS;AAAuB;AAChCC,UAAU;AAAsB;AAChCC,MAAM,CAA0B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}