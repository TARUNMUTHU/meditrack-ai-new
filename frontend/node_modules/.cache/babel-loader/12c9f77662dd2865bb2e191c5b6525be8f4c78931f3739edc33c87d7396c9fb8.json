{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\meditrack-ai\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// C:\\Users\\ASUS\\meditrack-ai\\frontend\\src\\contexts\\AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth, onAuthStateChanged, signOut as firebaseSignOut } from '../firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase'; // Import db here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Tracks if auth state is still loading\n  const [userProfile, setUserProfile] = useState(null); // Stores additional user data from Firestore\n\n  useEffect(() => {\n    // This listener runs whenever the user's sign-in state changes\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      setCurrentUser(user);\n      if (user) {\n        // If user is logged in, try to fetch their profile from Firestore\n        const docRef = doc(db, \"users\", user.uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          setUserProfile(docSnap.data());\n        } else {\n          setUserProfile(null); // No profile found\n        }\n      } else {\n        setUserProfile(null); // Clear profile if user logs out\n      }\n      setLoading(false); // Authentication state has been determined\n    });\n    return unsubscribe; // Clean up the subscription when the component unmounts\n  }, []);\n  const logout = () => firebaseSignOut(auth); // Simple logout function\n\n  const value = {\n    currentUser,\n    userProfile,\n    loading,\n    logout\n  };\n  return (\n    /*#__PURE__*/\n    // Only render children once authentication state has been loaded\n    _jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: !loading && children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s2(AuthProvider, \"Xey6YrJimIMNEMMx5vkorAHFkW4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","onAuthStateChanged","signOut","firebaseSignOut","doc","getDoc","db","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","userProfile","setUserProfile","unsubscribe","user","docRef","uid","docSnap","exists","data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/meditrack-ai/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// C:\\Users\\ASUS\\meditrack-ai\\frontend\\src\\contexts\\AuthContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { auth, onAuthStateChanged, signOut as firebaseSignOut } from '../firebase';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase'; // Import db here\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Tracks if auth state is still loading\r\n  const [userProfile, setUserProfile] = useState(null); // Stores additional user data from Firestore\r\n\r\n  useEffect(() => {\r\n    // This listener runs whenever the user's sign-in state changes\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        // If user is logged in, try to fetch their profile from Firestore\r\n        const docRef = doc(db, \"users\", user.uid);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n          setUserProfile(docSnap.data());\r\n        } else {\r\n          setUserProfile(null); // No profile found\r\n        }\r\n      } else {\r\n        setUserProfile(null); // Clear profile if user logs out\r\n      }\r\n      setLoading(false); // Authentication state has been determined\r\n    });\r\n\r\n    return unsubscribe; // Clean up the subscription when the component unmounts\r\n  }, []);\r\n\r\n  const logout = () => firebaseSignOut(auth); // Simple logout function\r\n\r\n  const value = {\r\n    currentUser,\r\n    userProfile,\r\n    loading,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    // Only render children once authentication state has been loaded\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,IAAI,EAAEC,kBAAkB,EAAEC,OAAO,IAAIC,eAAe,QAAQ,aAAa;AAClF,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,SAASC,EAAE,QAAQ,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASc,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOd,UAAU,CAACY,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,WAAW,GAAGpB,kBAAkB,CAACD,IAAI,EAAE,MAAOsB,IAAI,IAAK;MAC3DN,cAAc,CAACM,IAAI,CAAC;MACpB,IAAIA,IAAI,EAAE;QACR;QACA,MAAMC,MAAM,GAAGnB,GAAG,CAACE,EAAE,EAAE,OAAO,EAAEgB,IAAI,CAACE,GAAG,CAAC;QACzC,MAAMC,OAAO,GAAG,MAAMpB,MAAM,CAACkB,MAAM,CAAC;QACpC,IAAIE,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;UACpBN,cAAc,CAACK,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACLP,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACxB;MACF,CAAC,MAAM;QACLA,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB;MACAF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAOG,WAAW,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,MAAM,GAAGA,CAAA,KAAMzB,eAAe,CAACH,IAAI,CAAC,CAAC,CAAC;;EAE5C,MAAM6B,KAAK,GAAG;IACZd,WAAW;IACXI,WAAW;IACXF,OAAO;IACPW;EACF,CAAC;EAED;IAAA;IACE;IACApB,OAAA,CAACC,WAAW,CAACqB,QAAQ;MAACD,KAAK,EAAEA,KAAM;MAAAhB,QAAA,EAChC,CAACI,OAAO,IAAIJ;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;AAE3B;AAACpB,GAAA,CA1CeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}