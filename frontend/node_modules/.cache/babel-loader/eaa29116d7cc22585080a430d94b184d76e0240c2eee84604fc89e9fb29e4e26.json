{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\meditrack-ai\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth, db } from '../firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userReports, setUserReports] = useState([]); // New state for user reports\n\n  // Function to add a new report to the history\n  const addReport = reportData => {\n    // Add a unique ID and timestamp to the report\n    const newReport = {\n      id: Date.now(),\n      // Simple unique ID for now\n      timestamp: new Date().toISOString(),\n      ...reportData\n    };\n    setUserReports(prevReports => [newReport, ...prevReports]); // Add new report to the beginning\n    console.log(\"Report added to context:\", newReport);\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      setCurrentUser(user);\n      if (user) {\n        // Fetch user profile from Firestore\n        try {\n          const docRef = doc(db, 'users', user.uid);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            setUserProfile(docSnap.data());\n          } else {\n            console.log('No such user profile document!');\n            setUserProfile(null);\n          }\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n          setUserProfile(null);\n        }\n        // In a real app, you'd fetch userReports from Firestore here\n        // For now, it will be empty on refresh/new login unless explicitly fetched.\n      } else {\n        setUserProfile(null);\n        setUserReports([]); // Clear reports when logged out\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    userProfile,\n    loading,\n    logout: () => auth.signOut(),\n    userReports,\n    // Include userReports in context value\n    addReport // Include addReport function in context value\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"Jw+Cg9cnjjxu4nDDPB3CP4Nx5QQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","db","onAuthStateChanged","doc","getDoc","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","userReports","setUserReports","addReport","reportData","newReport","id","Date","now","timestamp","toISOString","prevReports","console","log","unsubscribe","user","docRef","uid","docSnap","exists","data","error","value","logout","signOut","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/meditrack-ai/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { auth, db } from '../firebase';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userReports, setUserReports] = useState([]); // New state for user reports\r\n\r\n  // Function to add a new report to the history\r\n  const addReport = (reportData) => {\r\n    // Add a unique ID and timestamp to the report\r\n    const newReport = {\r\n      id: Date.now(), // Simple unique ID for now\r\n      timestamp: new Date().toISOString(),\r\n      ...reportData\r\n    };\r\n    setUserReports(prevReports => [newReport, ...prevReports]); // Add new report to the beginning\r\n    console.log(\"Report added to context:\", newReport);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        // Fetch user profile from Firestore\r\n        try {\r\n          const docRef = doc(db, 'users', user.uid);\r\n          const docSnap = await getDoc(docRef);\r\n          if (docSnap.exists()) {\r\n            setUserProfile(docSnap.data());\r\n          } else {\r\n            console.log('No such user profile document!');\r\n            setUserProfile(null);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching user profile:', error);\r\n          setUserProfile(null);\r\n        }\r\n        // In a real app, you'd fetch userReports from Firestore here\r\n        // For now, it will be empty on refresh/new login unless explicitly fetched.\r\n      } else {\r\n        setUserProfile(null);\r\n        setUserReports([]); // Clear reports when logged out\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    userProfile,\r\n    loading,\r\n    logout: () => auth.signOut(),\r\n    userReports, // Include userReports in context value\r\n    addReport,    // Include addReport function in context value\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}